<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        .chat-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            max-height: 100%;
            transition: height 0.3s ease;
        }

        .chat-container.expanded {
            height: 520px;
        }

        .chat-header {
            background-color: #0f3a13;
            color: #fff;
            text-align: center;
            padding: 20px;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            border-radius: 10px 10px 0 0;
        }

        .minimize-icon,
        .close-icon {
            cursor: pointer;
            font-size: 20px;
            line-height: 1;
            color: rgb(238, 68, 16);
            padding: 5px;
            /* Added padding for button spacing */
            border-radius: 50%;
            /* Make buttons round */
            margin-left: 10px;
        }

        .chat-messages {
            padding: 10px;
            overflow-y: auto;
            flex-grow: 1;
        }

        .message {
            padding: 10px;
            border-radius: 10px;
            margin: 5px;
            max-width: 70%;
            display: flex;
            align-items: center;
        }

        .user-message,
        .bot-message {
            padding: 10px;
            border-radius: 10px;
            margin: 5px;
            max-width: 70%;
            display: flex;
            align-items: center;
        }

        .user-message {
            /* background-color: #9ddba0; */
            color: #000000;
            justify-content: flex-end;
            margin-left: auto;
        }

        .bot-message {
            background-color: #9ddba2;
            color: #fafafa;
            justify-content: flex-start;
            margin-right: auto;
        }

        .chat-input {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: #0f3a13;
            border-radius: 0 0 10px 10px;
        }

        input[type="text"] {
            flex-grow: 1;
            padding: 8px;
            border: none;
            border-radius: 5px;
            margin-right: 10px;
        }

        button {
            background-color: #0f3a13;
            color: #fff;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
        }

        .centered-text {
            display: inline-block;
            text-align: center;
            width: 100%;
            white-space: nowrap;
        }

        .minimized .chat-messages,
        .minimized .chat-input,
        .minimized #chat-header {
            display: none;
        }

        /* Add this CSS to center the image within the chat-bubble */
        .image-container {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
        }

        .chat-bubble-icon {
            /* Your existing styles for the chat-bubble-icon */
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #0f3a13;
            color: #fff;
            width: 40px;
            height: 40px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 50%;
            cursor: pointer;
            z-index: 1000;
            display: none;
            /* Hide the "A" icon initially */
        }
    </style>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">


    <title>Chatbot</title>
</head>

<body>
    <div class="chat-container" id="chat-container">
        <div class="chat-header" id="chat-header">
            <span class="centered-text">Welcome to the Arcadia Domain Consultant Chatbot</span>
            <span id="minimize-chat" class="minimize-icon">&#x2013;</span>
            <span id="close-chat" class="close-icon">Ã—</span>
        </div>
        <div class="chat-messages" id="chat-messages"></div>
        <div class="chat-input">
            <input type="text" id="user-input" placeholder="Type a message...">
            <button id="send-button">Send</button>
        </div>

    </div>
    <!-- <div class="chat-bubble-icon" id="chat-bubble">A</div> -->
    <div class="chat-bubble-icon" id="chat-bubble">
        <div class="image-container">
            <img src="arcadia-logo.png" alt="Your Image">
        </div>
    </div>


    <script>
        const chatContainer = document.getElementById("chat-container");
        const minimizeButton = document.getElementById("minimize-chat");
        const closeChatButton = document.getElementById("close-chat");
        const chatBubble = document.getElementById("chat-bubble");

        let chatbotState = "expanded"; // Initial state

        // Function to update button icons
        function updateButtonIcons() {
            if (chatbotState === "expanded") {
                minimizeButton.style.display = "inline";
            } else {
                minimizeButton.style.display = "none";
            }
        }

        // Initially hide the minimize button
        updateButtonIcons();

        minimizeButton.addEventListener("click", () => {
            chatbotState = chatbotState === "expanded" ? "minimized" : "expanded";
            updateButtonIcons();
            toggleChat();
        });

        // closeChatButton.addEventListener("click", () => {
        //     const chatMessages = document.getElementById("chat-messages");

        //     // Clear all messages, including user messages
        //     chatMessages.innerHTML = "";

        //     // Minimize the chatbot
        //     chatbotState = "minimized";
        //     updateButtonIcons();
        //     toggleChat();

        //     // Simulate bot messages after clearing
        //     simulateBotMessages();
        // });

        chatBubble.addEventListener("click", () => {
            chatbotState = "expanded";
            updateButtonIcons();
            toggleChat();
            chatBubble.style.display = "none"; // Hide the "A" icon when chatbot is expanded

            // Check if chatMessages is empty, and if so, load initial bot messages
            const chatMessages = document.getElementById("chat-messages");
            if (chatMessages.innerHTML.trim() === "") {
                simulateBotMessages();
            }
        });

        closeChatButton.addEventListener("click", () => {
            const chatMessages = document.getElementById("chat-messages");

            // Clear all messages, including user messages
            chatMessages.innerHTML = "";

            // Minimize the chatbot
            chatbotState = "minimized";
            updateButtonIcons();
            toggleChat();

            // Simulate bot messages after clearing
            if (chatMessages.innerHTML.trim() === "") {
                simulateBotMessages();
            }
        });




        function toggleChat() {
            if (chatbotState === "minimized") {
                minimizeButton.style.display = "none";
                chatContainer.classList.add("minimized");
                chatBubble.style.display = "block"; // Show the "A" icon when chatbot is minimized
            } else {
                minimizeButton.style.display = "inline";
                chatContainer.classList.remove("minimized");
                // closeChatButton.style.display = "none"; // Remove this line to keep the close button always visible
            }
        }



        document.addEventListener("DOMContentLoaded", function () {
            const userInput = document.getElementById("user-input");
            const sendButton = document.getElementById("send-button");
            const chatMessages = document.getElementById("chat-messages");

            // Function to add messages to the chat
            function appendMessage(sender, message) {
                const messageDiv = document.createElement("div");
                messageDiv.classList.add("message");

                if (sender === "user") {
                    messageDiv.classList.add("user-message");
                    message = "User: " + message; // Concatenate "User: " with the user's message
                } else if (sender === "bot") {
                    messageDiv.classList.add("bot-message");
                }

                messageDiv.innerText = message;
                chatMessages.appendChild(messageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }

            // Function to simulate bot messages immediately
            function simulateBotMessages() {
                const botMessages = [
                    "Bot: How can I assist you today?",
                    "Bot: You can ask me domain questions from any of the Levels"
                ];

                // Loop through and add the bot messages without a delay
                botMessages.forEach((message) => {
                    appendMessage("bot", message);
                });
            }

            // Call simulateBotMessages when the page loads
            simulateBotMessages();

            sendButton.addEventListener("click", function () {
                const userMessage = userInput.value.trim();
                if (userMessage !== "") {
                    appendMessage("user", userMessage);
                    const botResponse = getBotResponse(userMessage);
                    appendMessage("bot", botResponse);
                    userInput.value = "";
                }
            });

            userInput.addEventListener("keyup", function (event) {
                if (event.key === "Enter") {
                    sendButton.click();
                }
            });

            function getBotResponse(userMessage) {
                return "bot: " + "Hello, What can I do for you?";
            }

            const chatContainer = document.getElementById("chat-container");
            const minimizeButton = document.getElementById("minimize-chat");
            const closeChatButton = document.getElementById("close-chat");
            const chatBubble = document.getElementById("chat-bubble");

            let chatbotState = "expanded"; // Initial state

            // Function to update button icons
            function updateButtonIcons() {
                if (chatbotState === "expanded") {
                    minimizeButton.style.display = "inline";
                } else {
                    minimizeButton.style.display = "none";
                }
            }

            // Initially hide the minimize button
            updateButtonIcons();

            minimizeButton.addEventListener("click", () => {
                chatbotState = chatbotState === "expanded" ? "minimized" : "expanded";
                updateButtonIcons();
                toggleChat();
            });

            closeChatButton.addEventListener("click", () => {
                // Clear all messages, including user messages
                chatMessages.innerHTML = "";

                // Minimize the chatbot
                chatbotState = "minimized";
                updateButtonIcons();
                toggleChat();

                // Simulate bot messages after clearing
                simulateBotMessages();
            });

            chatBubble.addEventListener("click", () => {
                chatbotState = "expanded";
                updateButtonIcons();
                toggleChat();
                chatBubble.style.display = "none"; // Hide the "A" icon when chatbot is expanded

                // Check if chatMessages is empty, and if so, load initial bot messages
                if (chatMessages.innerHTML.trim() === "") {
                    simulateBotMessages();
                }
            });

            function toggleChat() {
                if (chatbotState === "minimized") {
                    minimizeButton.style.display = "none";
                    chatContainer.classList.add("minimized");
                    chatBubble.style.display = "block"; // Show the "A" icon when chatbot is minimized
                } else {
                    minimizeButton.style.display = "inline";
                    chatContainer.classList.remove("minimized");
                    // closeChatButton.style.display = "none"; // Remove this line to keep the close button always visible
                }
            }
        });


    </script>
</body>

</html>
