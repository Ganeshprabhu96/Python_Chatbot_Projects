<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        .chat-container {
            width: 800px;
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            height: 30px;
            transition: height 0.3s ease;
        }

        .expanded {
            height: 500px;
        }

        .chat-header {
            background-color: #007bff;
            color: #fff;
            text-align: center;
            padding: 20px;
            /* Increase the padding to make the header taller */
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            /* Align items to the right side */
            align-items: center;
            /* Center vertically */
            font-size: 20px;
            /* Increase the font size for larger text */
        }

        .close-icon {
            cursor: pointer;
            margin-right: 1px;
            /* Add some right margin to separate it from the text */
            font-size: 20px;
            line-height: 1;
            color: rgb(255, 196, 0);
        }


        .chat-messages {
            padding: 10px;
            overflow-y: auto;
            flex-grow: 1;
        }

        .message {
            padding: 10px;
            border-radius: 10px;
            margin: 5px;
            max-width: 70%;
            display: flex;
            align-items: center;
        }

        .user-message,
        .bot-message {
            padding: 10px;
            border-radius: 10px;
            margin: 5px;
            max-width: 70%;
            display: flex;
            align-items: center;
        }


        .user-message {
            /* background-color: #5ca6d8; */
            color: #181717;
            justify-content: flex-end;
            margin-left: auto;
        }



        .bot-message {
            background-color: #afc25e;
            color: #000;
            justify-content: flex-start;
            margin-right: auto;
        }

        .chat-input {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: #fff;
        }

        input[type="text"] {
            flex-grow: 1;
            padding: 8px;
            border: none;
            border-radius: 5px;
            margin-right: 10px;
        }

        button {
            background-color: #0c57a1;
            color: #fff;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
        }


        .centered-text {
            display: inline-block;
            text-align: center;
            width: 100%;
            white-space: nowrap;
        }

        
    </style>



    <title>Chatbot</title>
</head>

<body>
    <div class="chat-container" id="chat-container">

        <div class="chat-header" id="chat-header">

          
            <span class="centered-text">Welcome to the Arcadia Domain Consultant Chatbot</span>
            <span id="close-chat" class="close-icon">X</span>
        </div>
        <div class="chat-messages" id="chat-messages">
        </div>
        <div class="chat-input">
            <input type="text" id="user-input" placeholder="Type a message...">
            <button id="send-button">Send</button>
        </div>
        <div class="resize-handle" id="resize-handle"></div>

    </div>

    </div>

</body>

</html>

<script>

    const chatContainer = document.getElementById("chat-container");
    const chatHeader = document.getElementById("chat-header");

    chatHeader.addEventListener("click", toggleChat);

    function toggleChat() {
        chatContainer.classList.toggle("expanded");
    }

    document.addEventListener("DOMContentLoaded", function () {
        const userInput = document.getElementById("user-input");
        const sendButton = document.getElementById("send-button");
        const chatMessages = document.getElementById("chat-messages");
        const chatContainer = document.getElementById("chat-container");


        function closeChat() {
            chatMessages.innerHTML = ""; // Clear all messages
            simulateBotMessages(); // Repopulate with the first 2 bot responses
        }
        const closeChatButton = document.getElementById("close-chat");
        closeChatButton.addEventListener("click", closeChat);
        // Function to add messages to the chat
        function appendMessage(sender, message) {
            const messageDiv = document.createElement("div");
            messageDiv.classList.add("message");

            if (sender === "user") {
                messageDiv.classList.add("user-message");
                message = "User: " + message; // Concatenate "User: " with the user's message
            } else if (sender === "bot") {
                messageDiv.classList.add("bot-message");
            }

            messageDiv.innerText = message;
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }


        // Function to simulate bot messages immediately
        function simulateBotMessages() {
            const botMessages = [
                "Bot: How can I assist you today?",
                "Bot: You can ask me domain questions from any of the Levels"

            ];

            // Loop through and add the bot messages without a delay
            botMessages.forEach((message) => {
                appendMessage("bot", message);
            });
        }

        simulateBotMessages();

        sendButton.addEventListener("click", function () {
            const userMessage = userInput.value.trim();
            if (userMessage !== "") {
                appendMessage("user", userMessage);
                // Replace with your chatbot logic
                const botResponse = getBotResponse(userMessage);
                appendMessage("bot", botResponse);
                userInput.value = "";
            }
        });

        userInput.addEventListener("keyup", function (event) {
            if (event.key === "Enter") {
                sendButton.click();
            }
        });

        function getBotResponse(userMessage) {
           
            return "bot: " + "Hello,,,What can i do for you,,,?";
        }

        function toggleChat() {
            chatContainer.classList.toggle("expanded");
            // When expanding the chat, start simulating bot messages after a delay
            if (chatContainer.classList.contains("expanded")) {
                setTimeout(simulateBotMessages, 1000); // Delay the initial bot message after expansion
            }
        }

    });


</script>